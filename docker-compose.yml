services:
  backend:
    build:
      context: ./backend
    container_name: backend
    restart: always
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always

  db:
    image: postgres:13
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
      

volumes:
  postgres_data:
    driver: local 
    driver_opts:
      type: none
      device: ${PWD}/postgres_data
      o: bind